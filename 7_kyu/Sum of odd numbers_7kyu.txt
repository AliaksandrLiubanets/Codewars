Task:

Given the triangle of consecutive odd numbers:
             1
          3     5
       7     9    11
   13    15    17    19
21    23    25    27    29
...

Calculate the sum of the numbers in the nth row 
of this triangle (starting at index 1) e.g.: (Input --> Output)

Examples:

1 -->  1
2 --> 3 + 5 = 8


Solution:

function rowSumOddNumbers(n) {
    let current = 1
    let resultArr = []
    for (let row = 1; row <= n ; row++) {
      const arr = []
      for (let c = 1; c <= row; c++) {  
        if(row === 1) {
            current = 1
            arr.push(current)
        } else {
            current += 2
            arr.push(current)
        } 
      } 
      if (row === n) {
        resultArr = arr 
      }
  }  
  return resultArr.reduce((a, b) => a + b, 0)
}

or:

const rowSumOddNumbers = n => Math.pow(n, 3)